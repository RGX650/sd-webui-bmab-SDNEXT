import time
import inspect
from collections import namedtuple
from typing import Optional, Dict, Any
from fastapi import FastAPI
from gradio import Blocks
import modules.errors as errors
from modules.script_callbacks import ScriptCallback, add_callback, callback_map, timer, report_exception


class ExtraNoiseParams:
    def __init__(self, noise, x, xi):
        self.noise = noise
        """Random noise generated by the seed"""
        self.x = x
        """Latent representation of the image"""
        self.xi = xi
        """Noisy latent representation of the image"""

def extra_noise_callback(params: ExtraNoiseParams):
    for c in callback_map['callbacks_extra_noise']:
        try:
            t0 = time.time()
            c.callback(params)
            timer(t0, c.script, 'extra_noise')
        except Exception:
            report_exception(c, 'extra_noise_callback')

def on_extra_noise(callback):
    """register a function to be called before adding extra noise in img2img or hires fix;
    The callback is called with one argument:
    - params: ExtraNoiseParams - contains noise determined by seed and latent representation of image
    """
    add_callback(callback_map['callbacks_extra_noise'], callback)